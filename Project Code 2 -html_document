---
title: "Project Code 2"
author: "Ronak hamzehlou"
date: "10/19/2021"
output: html_document
---

#1-How many breweries are present in each state?
brw<- read.csv("https://raw.githubusercontent.com/RonakHamzehlou/MSDS_6306_Doing-Data-Science/Master/Unit%208%20and%209%20Case%20Study%201/Breweries.csv")
dplyr::count(brw, State)
map <- Breweries%>%count(State)
map
map$State<- state.name[match(map$State,state.abb)]
map
names(map)[names(map)=="State"]<-"state"
plot_usmap(data=map,values="n",color="red") + scale_fill_continuous
(name="Brewery Number",lable=scales::comma)+theme(legened.position="right")
'''
#2-Merge beer data with the breweries data. Print the first 6 observations and the last six observations to check the merged file.  
beers<- read.csv("https://raw.githubusercontent.com/RonakHamzehlou/MSDS_6306_Doing-Data-Science/Master/Unit%208%20and%209%20Case%20Study%201/Beers.csv")
'''
#2-Make sure columns does not have same name
colnames(beers)
colnames(brw)
'''
#2-Fix the column names
colnames(beers)[colnames(beers)=="Brewery_id"] <- "Brew_ID"
colnames(beers)
'''
#2-Merge both Brew_id from both data sets. 
final_beer <- merge(brw,beers,by="Brew_ID")
str(final_beer)
'''
#2-Pull the first 6 observation from final_beer, n=6 
head(final_beer, n=6)
'''
#3-Missing values in each column
colSums(is.na(final_beer))
'''
#4-Compute the median alcohol content and international bitterness unit for each state. Plot a bar chart to compare.
med.abv<-tapply(final_beer$ABV, final_beer$State, median)
med.IBU<-tapply(final_beer$IBU, final_beer$State, median)
barplot(med.abv)
barplot(med.IBU)
'''
#5-State has the maximum alcoholic beer
final_beer[which.max(final_beer$ABV),]
'''
#5-State has the most bitter beer
final_beer[which.max(final_beer$IBU),]
'''
#6- Summary statistics and distribution of the ABV variable
summary(final_beer$ABV)
'''
#7- Is there an apparent relationship between the bitterness of the beer and its alcoholic content?Draw a scatter plot.
ggplot(data = final_beer, mapping = aes(x = final_beer$ABV, y = final_beer$IBU))+
  geom_point() +
  geom_smooth(method = lm)
  '''

